{"logLevel":"debug","message":"multithreading is set to true"}
{"logLevel":"debug","message":"multithreading enabled, but could not read GAUGE_PARALLEL_STREAMS_COUNT as int. Got GAUGE_PARALLEL_STREAMS_COUNT=null"}
{"logLevel":"debug","message":"using numberOfStreams=1, err: null"}
{"logLevel":"debug","message":"Using reflection to scan dependencies for gauge implementations..."}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/berka/.m2/repository/org/slf4j/slf4j-simple/1.7.30/slf4j-simple-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/Users/berka/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
{"logLevel":"debug","message":"gauge-java took 1433milliseconds to load and scan. This should be less than 'runner_connection_timeout' config value."}
{"logLevel":"debug","message":"run 'gauge config runner_connection_timeout' and verify that it is < 1433"}
{"logLevel":"debug","message":"starting gRPC server..."}
[pool-1-thread-1] WARN org.reflections.Reflections - could not create Dir using com.thoughtworks.gauge.scan.ClasspathScanner$1@2af7e0f5 from url file:/C:/Users/berka/Desktop/ciceksepeti-UI/target/test-classes. skipping.
java.lang.NullPointerException
	at com.thoughtworks.gauge.scan.ClasspathScanner$1.createDir(ClasspathScanner.java:49)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:99)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.<init>(Reflections.java:129)
	at com.thoughtworks.gauge.scan.ClasspathScanner.createReflections(ClasspathScanner.java:58)
	at com.thoughtworks.gauge.scan.ClasspathScanner.scan(ClasspathScanner.java:33)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.lambda$new$0(MessageProcessorFactory.java:70)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
[pool-1-thread-1] WARN org.reflections.Reflections - could not create Dir using directory from url file:/C:/Users/berka/Desktop/ciceksepeti-UI/target/test-classes. skipping.
java.lang.NullPointerException
	at org.reflections.vfs.Vfs$DefaultUrlTypes$3.matches(Vfs.java:239)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:98)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.<init>(Reflections.java:129)
	at com.thoughtworks.gauge.scan.ClasspathScanner.createReflections(ClasspathScanner.java:58)
	at com.thoughtworks.gauge.scan.ClasspathScanner.scan(ClasspathScanner.java:33)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.lambda$new$0(MessageProcessorFactory.java:70)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
[pool-1-thread-1] WARN org.reflections.Reflections - could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/C:/Users/berka/Desktop/ciceksepeti-UI/target/test-classes]
either use fromURL(final URL url, final List<UrlType> urlTypes) or use the static setDefaultURLTypes(final List<UrlType> urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.<init>(Reflections.java:129)
	at com.thoughtworks.gauge.scan.ClasspathScanner.createReflections(ClasspathScanner.java:58)
	at com.thoughtworks.gauge.scan.ClasspathScanner.scan(ClasspathScanner.java:33)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.lambda$new$0(MessageProcessorFactory.java:70)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
{"logLevel":"debug","message":"started gRPC server on port 55971"}
{"logLevel":"info","message":"Listening on port:55971"}
[pool-1-thread-1] INFO org.reflections.Reflections - Reflections took 1791 ms to scan 122 urls, producing 5081 keys and 26044 values 
{"logLevel":"debug","message":"Scanning packages for steps"}
{"logLevel":"debug","message":"Scanning packages for hooks"}
{"logLevel":"debug","message":"Scanned steps (using static parsing + reflections): "}
{"logLevel":"debug","message":"\tJavascript ile css tıkla {} : public void javascriptClickerWithCss(String css)"}
{"logLevel":"debug","message":"\tCheck if element {} has attribute {} : public void checkElementAttributeExists(String key, String attribute)"}
{"logLevel":"debug","message":"\tGiven element {} dynamic text area range should be max {} : public void textRangeAndWarningMessageShouldBe(String key, String limit)"}
{"logLevel":"debug","message":"\tCheck if {} element's attribute value {} : public void asdf(String key, String active)"}
{"logLevel":"debug","message":"\tElement {} var mı kontrol et yoksa hata mesajı ver {} : public void getElementWithKeyIfExistsWithMessage(String key, String message)"}
{"logLevel":"debug","message":"\tSend Keys to Element : public void sendKeysToGivenElement(String text, String key)"}
{"logLevel":"debug","message":"\tCheck if new tab has verified url {} : public void switchTabsUsingPartOfUrl(String key)"}
{"logLevel":"debug","message":"\tCheck if title contains text {} : public void checkElementContainsText(String expectedText)"}
{"logLevel":"debug","message":"\tGiven element {} dynamic text area warning message should be : public void warningMessageShouldBe(String key)"}
{"logLevel":"debug","message":"\t{} has next degeri true ise her sayfada bulunan {} li key ile 60 urun yuklendigini dogrula : public void validateProductsSizeEachScrollDown(String key, String elements) throws InterruptedException"}
{"logLevel":"debug","message":"\tScroll to {} field : public void scrollToElementWithJs(String key)"}
{"logLevel":"debug","message":"\tWait until elements loaded {} and verify sorting : public void waitUntilElementsLoadedAndCheckSortingSuccessful(String key)"}
{"logLevel":"debug","message":"\tSeverityLevel.BLOCKER : public void navigateToHomePage()"}
{"logLevel":"debug","message":"\tClick with js method {} : public void jsClicker(String key)"}
{"logLevel":"debug","message":"\tIf {} element's attribute value true then verify 60 products loaded in every page with {} : public void validateProductsSizeEachScrollDown(String key, String elements) throws InterruptedException"}
{"logLevel":"debug","message":"\tNavigate to home page : public void navigateToHomePage()"}
{"logLevel":"debug","message":"\tClick with javascript to xpath {} : public void javascriptClickerWithXpath(String xpath)"}
{"logLevel":"debug","message":"\tHover all elements in {} with js : public void hoverAllMenuLinksWithJs(String key)"}
{"logLevel":"debug","message":"\tClick with javascript to css {} : public void javascriptClickerWithCss(String css)"}
{"logLevel":"debug","message":"\tUser send keys to to given element : public void sendKeysToGivenElement(String text, String key)"}
{"logLevel":"debug","message":"\tWait {} milliseconds : public void waitByMilliSeconds(long milliseconds)"}
{"logLevel":"debug","message":"\tNavigate to Given Page : public void navigateToGivenPage(String string)"}
{"logLevel":"debug","message":"\t{} milisaniye bekle : public void waitByMilliSeconds(long milliseconds)"}
{"logLevel":"debug","message":"\tHomePage Actions : public void implementation1()"}
{"logLevel":"debug","message":"\tNavigate to given page {} : public void navigateToGivenPage(String string)"}
{"logLevel":"debug","message":"\t{} elementi {} değerini içeriyor mu kontrol et : public void checkElementContainsText(String key, String expectedText)"}
{"logLevel":"debug","message":"\tWait until image uploaded and click checkbox {} : public void waitUntilImageUploadedAndClickCheckBox(String key)"}
{"logLevel":"debug","message":"\tUser navigates to given page : public void navigateToGivenPage(String string)"}
{"logLevel":"debug","message":"\tSelect from {} list with {} : public void select(String key, String text)"}
{"logLevel":"debug","message":"\tCheck if element {} exists else print message {} : public void getElementWithKeyIfExistsWithMessage(String key, String message)"}
{"logLevel":"debug","message":"\tUpload file to given {} : public void uploadImage(String key) throws AWTException, InterruptedException"}
{"logLevel":"debug","message":"\tCheck broken links with {} element : public void brokenLinkCheck(String key)"}
{"logLevel":"debug","message":"\tSeverityLevel.NORMAL : public void sendKeysToGivenElement(String text, String key)"}
{"logLevel":"debug","message":"\tHover by given element {} : public void hoverByGivenElement(String key)"}
{"logLevel":"debug","message":"\t{} li element sayfada görüntüleniyor mu kontrol et  : public void isDisplayedSection(String key)"}
{"logLevel":"debug","message":"\t{} alanına kaydır : public void scrollToElement(String key)"}
{"logLevel":"debug","message":"\tTitle {} değerini içeriyor mu kontrol et : public void checkElementContainsText(String expectedText)"}
{"logLevel":"debug","message":"\tElement with {} is enable on website : public void isEnableSection(String key)"}
{"logLevel":"debug","message":"\tSend {} Keys to given element {} : public void sendKeysToGivenElement(String text, String key)"}
{"logLevel":"debug","message":"\t{} elementi {} niteliğine sahip mi : public void checkElementAttributeExists(String key, String attribute)"}
{"logLevel":"debug","message":"\tJavascript ile xpath tıkla {} : public void javascriptClickerWithXpath(String xpath)"}
{"logLevel":"debug","message":"\t{} alanına js ile kaydır : public void scrollToElementWithJs(String key)"}
{"logLevel":"debug","message":"\t{} product is exist on cart page : public void isExistOnCartPage(String key)"}
{"logLevel":"debug","message":"\tSelect {} list with {} : public void s(String key, String option)"}
{"logLevel":"debug","message":"\tCheck if element {} contains text {} : public void checkElementContainsText(String key, String expectedText)"}
{"logLevel":"debug","message":"\t{} menu listesinden rasgele seç : public void chooseRandomElementFromList(String key)"}
{"logLevel":"debug","message":"\tClick to element {} : public void clickElement(String key)"}
{"logLevel":"debug","message":"\t{} li element sayfada enable mı kontrol et  : public void isEnableSection(String key)"}
{"logLevel":"debug","message":"\tCheck position {} relative to {} : public Boolean checkRelativePosition(String key1, String key2)"}
{"logLevel":"debug","message":"\tUser navigates the home page : public void navigateToHomePage()"}
{"logLevel":"debug","message":"\tElement with {} is displayed on website : public void isDisplayedSection(String key)"}
{"logLevel":"debug","message":"\tSelect address from auto suggestive dropdown with {} : public void selectFromAutoSuggestiveDropDown(String key)"}
{"logLevel":"debug","message":"\tElementine tıkla {} : public void clickElement(String key)"}
{"logLevel":"debug","message":"\tNavigate to homepage : public void navigateToHomePage()"}
[pool-2-thread-1] WARN org.reflections.Reflections - could not create Dir using com.thoughtworks.gauge.scan.ClasspathScanner$1@2af7e0f5 from url file:/C:/Users/berka/Desktop/ciceksepeti-UI/target/test-classes. skipping.
java.lang.NullPointerException
	at com.thoughtworks.gauge.scan.ClasspathScanner$1.createDir(ClasspathScanner.java:49)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:99)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.<init>(Reflections.java:129)
	at com.thoughtworks.gauge.execution.parameters.parsers.base.ParameterParsingChain.createReflections(ParameterParsingChain.java:47)
	at com.thoughtworks.gauge.execution.parameters.parsers.base.ParameterParsingChain.<init>(ParameterParsingChain.java:33)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.initializeExecutionMessageProcessors(MessageProcessorFactory.java:112)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.getProcessor(MessageProcessorFactory.java:87)
	at com.thoughtworks.gauge.RunnerServiceHandler.lambda$validateStep$17(RunnerServiceHandler.java:332)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
[pool-2-thread-1] WARN org.reflections.Reflections - could not create Dir using directory from url file:/C:/Users/berka/Desktop/ciceksepeti-UI/target/test-classes. skipping.
java.lang.NullPointerException
	at org.reflections.vfs.Vfs$DefaultUrlTypes$3.matches(Vfs.java:239)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:98)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.<init>(Reflections.java:129)
	at com.thoughtworks.gauge.execution.parameters.parsers.base.ParameterParsingChain.createReflections(ParameterParsingChain.java:47)
	at com.thoughtworks.gauge.execution.parameters.parsers.base.ParameterParsingChain.<init>(ParameterParsingChain.java:33)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.initializeExecutionMessageProcessors(MessageProcessorFactory.java:112)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.getProcessor(MessageProcessorFactory.java:87)
	at com.thoughtworks.gauge.RunnerServiceHandler.lambda$validateStep$17(RunnerServiceHandler.java:332)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
[pool-2-thread-1] WARN org.reflections.Reflections - could not create Vfs.Dir from url. ignoring the exception and continuing
org.reflections.ReflectionsException: could not create Vfs.Dir from url, no matching UrlType was found [file:/C:/Users/berka/Desktop/ciceksepeti-UI/target/test-classes]
either use fromURL(final URL url, final List<UrlType> urlTypes) or use the static setDefaultURLTypes(final List<UrlType> urlTypes) or addDefaultURLTypes(UrlType urlType) with your specialized UrlType.
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:109)
	at org.reflections.vfs.Vfs.fromURL(Vfs.java:91)
	at org.reflections.Reflections.scan(Reflections.java:237)
	at org.reflections.Reflections.scan(Reflections.java:204)
	at org.reflections.Reflections.<init>(Reflections.java:129)
	at com.thoughtworks.gauge.execution.parameters.parsers.base.ParameterParsingChain.createReflections(ParameterParsingChain.java:47)
	at com.thoughtworks.gauge.execution.parameters.parsers.base.ParameterParsingChain.<init>(ParameterParsingChain.java:33)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.initializeExecutionMessageProcessors(MessageProcessorFactory.java:112)
	at com.thoughtworks.gauge.connection.MessageProcessorFactory.getProcessor(MessageProcessorFactory.java:87)
	at com.thoughtworks.gauge.RunnerServiceHandler.lambda$validateStep$17(RunnerServiceHandler.java:332)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
[pool-2-thread-1] INFO org.reflections.Reflections - Reflections took 1201 ms to scan 122 urls, producing 5015 keys and 20137 values 
{"logLevel":"debug","message":"Killing Java runner..."}
{"logLevel":"debug","message":"Stopping execution pool..."}
{"logLevel":"debug","message":"Shutting down grpc server..."}
{"logLevel":"debug","message":"Runner killed gracefully."}
