{"logLevel":"debug","message":"multithreading is set to true"}
{"logLevel":"debug","message":"multithreading enabled, but could not read GAUGE_PARALLEL_STREAMS_COUNT as int. Got GAUGE_PARALLEL_STREAMS_COUNT=null"}
{"logLevel":"debug","message":"using numberOfStreams=1, err: null"}
{"logLevel":"debug","message":"Using reflection to scan dependencies for gauge implementations..."}
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
{"logLevel":"debug","message":"gauge-java took 780milliseconds to load and scan. This should be less than 'runner_connection_timeout' config value."}
{"logLevel":"debug","message":"run 'gauge config runner_connection_timeout' and verify that it is < 780"}
{"logLevel":"debug","message":"starting gRPC server..."}
{"logLevel":"debug","message":"started gRPC server on port 54427"}
{"logLevel":"info","message":"Listening on port:54427"}
{"logLevel":"debug","message":"Scanning packages for steps"}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.switchTabsUsingPartOfUrl' and 'org.example.StepImplementation.switchTabsUsingPartOfUrl'"}
{"logLevel":"debug","message":"Found Check if new tab has verified url {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.checkElementContainsText' and 'org.example.StepImplementation.checkElementContainsText'"}
{"logLevel":"debug","message":"Found Check if element {} contains text {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.checkElementContainsText' and 'org.example.StepImplementation.checkElementContainsText'"}
{"logLevel":"debug","message":"Found {} elementi {} değerini içeriyor mu kontrol et in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.isDisplayedSection' and 'org.example.StepImplementation.isDisplayedSection'"}
{"logLevel":"debug","message":"Found Element with {} is displayed on website in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.isDisplayedSection' and 'org.example.StepImplementation.isDisplayedSection'"}
{"logLevel":"debug","message":"Found {} li element sayfada görüntüleniyor mu kontrol et  in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.checkElementContainsText' and 'org.example.StepImplementation.checkElementContainsText'"}
{"logLevel":"debug","message":"Found Check if title contains text {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.checkElementContainsText' and 'org.example.StepImplementation.checkElementContainsText'"}
{"logLevel":"debug","message":"Found Title {} değerini içeriyor mu kontrol et in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.checkElementAttributeExists' and 'org.example.StepImplementation.checkElementAttributeExists'"}
{"logLevel":"debug","message":"Found Check if element {} has attribute {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.checkElementAttributeExists' and 'org.example.StepImplementation.checkElementAttributeExists'"}
{"logLevel":"debug","message":"Found {} elementi {} niteliğine sahip mi in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.navigateToGivenPage' and 'org.example.StepImplementation.navigateToGivenPage'"}
{"logLevel":"debug","message":"Found Navigate to given {} page in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.scrollToElement' and 'org.example.StepImplementation.scrollToElement'"}
{"logLevel":"debug","message":"Found {} alanına kaydır in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.clickElement' and 'org.example.StepImplementation.clickElement'"}
{"logLevel":"debug","message":"Found Click to element {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.clickElement' and 'org.example.StepImplementation.clickElement'"}
{"logLevel":"debug","message":"Found Elementine tıkla {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.chooseRandomElementFromList' and 'org.example.StepImplementation.chooseRandomElementFromList'"}
{"logLevel":"debug","message":"Found {} menu listesinden rasgele seç in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.javascriptClickerWithXpath' and 'org.example.StepImplementation.javascriptClickerWithXpath'"}
{"logLevel":"debug","message":"Found Click with javascript to xpath {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.javascriptClickerWithXpath' and 'org.example.StepImplementation.javascriptClickerWithXpath'"}
{"logLevel":"debug","message":"Found Javascript ile xpath tıkla {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.checkRelativePosition' and 'org.example.StepImplementation.checkRelativePosition'"}
{"logLevel":"debug","message":"Found Check position {} relative to {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.getElementWithKeyIfExistsWithMessage' and 'org.example.StepImplementation.getElementWithKeyIfExistsWithMessage'"}
{"logLevel":"debug","message":"Found Check if element {} exists else print message {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.getElementWithKeyIfExistsWithMessage' and 'org.example.StepImplementation.getElementWithKeyIfExistsWithMessage'"}
{"logLevel":"debug","message":"Found Element {} var mı kontrol et yoksa hata mesajı ver {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.javascriptClickerWithCss' and 'org.example.StepImplementation.javascriptClickerWithCss'"}
{"logLevel":"debug","message":"Found Click with javascript to css {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.javascriptClickerWithCss' and 'org.example.StepImplementation.javascriptClickerWithCss'"}
{"logLevel":"debug","message":"Found Javascript ile css tıkla {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.warningMessageShouldBe' and 'org.example.StepImplementation.warningMessageShouldBe'"}
{"logLevel":"debug","message":"Found Given element {} dynamic text area warning message should be in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.waitByMilliSeconds' and 'org.example.StepImplementation.waitByMilliSeconds'"}
{"logLevel":"debug","message":"Found Wait {} milliseconds in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.waitByMilliSeconds' and 'org.example.StepImplementation.waitByMilliSeconds'"}
{"logLevel":"debug","message":"Found {} milisaniye bekle in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.navigateToHomePage' and 'org.example.StepImplementation.navigateToHomePage'"}
{"logLevel":"debug","message":"Found Navigate to home page in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.hoverByGivenElement' and 'org.example.StepImplementation.hoverByGivenElement'"}
{"logLevel":"debug","message":"Found Hover by given element {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.asdf' and 'org.example.StepImplementation.asdf'"}
{"logLevel":"debug","message":"Found Check if {} element's attribute value {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.textRangeAndWarningMessageShouldBe' and 'org.example.StepImplementation.textRangeAndWarningMessageShouldBe'"}
{"logLevel":"debug","message":"Found Given element {} dynamic text area range should be max {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.uploadImage' and 'org.example.StepImplementation.uploadImage'"}
{"logLevel":"debug","message":"Found upload file in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.sendKeysToGivenElement' and 'org.example.StepImplementation.sendKeysToGivenElement'"}
{"logLevel":"debug","message":"Found Send {} Keys to given element {} in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementationHomePage.implementation1' and 'org.example.StepImplementationHomePage.implementation1'"}
{"logLevel":"debug","message":"Found HomePage Actions in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.scrollToElementWithJs' and 'org.example.StepImplementation.scrollToElementWithJs'"}
{"logLevel":"debug","message":"Found Scroll to {} field in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.scrollToElementWithJs' and 'org.example.StepImplementation.scrollToElementWithJs'"}
{"logLevel":"debug","message":"Found {} alanına js ile kaydır in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.isEnableSection' and 'org.example.StepImplementation.isEnableSection'"}
{"logLevel":"debug","message":"Found Element with {} is enable on website in current project scope."}
{"logLevel":"debug","message":"Comparing 'org.example.StepImplementation.isEnableSection' and 'org.example.StepImplementation.isEnableSection'"}
{"logLevel":"debug","message":"Found {} li element sayfada enable mı kontrol et  in current project scope."}
{"logLevel":"debug","message":"Scanning packages for hooks"}
{"logLevel":"debug","message":"Scanned steps (using static parsing + reflections): "}
{"logLevel":"debug","message":"\tWait {} milliseconds : public void waitByMilliSeconds(long milliseconds)"}
{"logLevel":"debug","message":"\tJavascript ile css tıkla {} : public void javascriptClickerWithCss(String css)"}
{"logLevel":"debug","message":"\tupload file : public void uploadImage()"}
{"logLevel":"debug","message":"\t{} milisaniye bekle : public void waitByMilliSeconds(long milliseconds)"}
{"logLevel":"debug","message":"\tCheck if element {} has attribute {} : public void checkElementAttributeExists(String key, String attribute)"}
{"logLevel":"debug","message":"\tNavigate to given {} page : public void navigateToGivenPage(String string)"}
{"logLevel":"debug","message":"\tGiven element {} dynamic text area range should be max {} : public void textRangeAndWarningMessageShouldBe(String key, String limit)"}
{"logLevel":"debug","message":"\tCheck if {} element's attribute value {} : public void asdf(String key, String active)"}
{"logLevel":"debug","message":"\tHomePage Actions : public void implementation1()"}
{"logLevel":"debug","message":"\tElement {} var mı kontrol et yoksa hata mesajı ver {} : public void getElementWithKeyIfExistsWithMessage(String key, String message)"}
{"logLevel":"debug","message":"\t{} elementi {} değerini içeriyor mu kontrol et : public void checkElementContainsText(String key, String expectedText)"}
{"logLevel":"debug","message":"\tCheck if element {} exists else print message {} : public void getElementWithKeyIfExistsWithMessage(String key, String message)"}
{"logLevel":"debug","message":"\tCheck if new tab has verified url {} : public void switchTabsUsingPartOfUrl(String key)"}
{"logLevel":"debug","message":"\tHover by given element {} : public void hoverByGivenElement(String key)"}
{"logLevel":"debug","message":"\tCheck if title contains text {} : public void checkElementContainsText(String expectedText)"}
{"logLevel":"debug","message":"\tGiven element {} dynamic text area warning message should be : public void warningMessageShouldBe(String key)"}
{"logLevel":"debug","message":"\t{} li element sayfada görüntüleniyor mu kontrol et  : public void isDisplayedSection(String key)"}
{"logLevel":"debug","message":"\t{} alanına kaydır : public void scrollToElement(String key)"}
{"logLevel":"debug","message":"\tTitle {} değerini içeriyor mu kontrol et : public void checkElementContainsText(String expectedText)"}
{"logLevel":"debug","message":"\tElement with {} is enable on website : public void isEnableSection(String key)"}
{"logLevel":"debug","message":"\tSend {} Keys to given element {} : public void sendKeysToGivenElement(String text, String key)"}
{"logLevel":"debug","message":"\t{} elementi {} niteliğine sahip mi : public void checkElementAttributeExists(String key, String attribute)"}
{"logLevel":"debug","message":"\tJavascript ile xpath tıkla {} : public void javascriptClickerWithXpath(String xpath)"}
{"logLevel":"debug","message":"\t{} alanına js ile kaydır : public void scrollToElementWithJs(String key)"}
{"logLevel":"debug","message":"\tScroll to {} field : public void scrollToElementWithJs(String key)"}
{"logLevel":"debug","message":"\tCheck if element {} contains text {} : public void checkElementContainsText(String key, String expectedText)"}
{"logLevel":"debug","message":"\t{} menu listesinden rasgele seç : public void chooseRandomElementFromList(String key)"}
{"logLevel":"debug","message":"\tClick to element {} : public void clickElement(String key)"}
{"logLevel":"debug","message":"\t{} li element sayfada enable mı kontrol et  : public void isEnableSection(String key)"}
{"logLevel":"debug","message":"\tCheck position {} relative to {} : public Boolean checkRelativePosition(String key1, String key2)"}
{"logLevel":"debug","message":"\tNavigate to home page : public void navigateToHomePage()"}
{"logLevel":"debug","message":"\tElement with {} is displayed on website : public void isDisplayedSection(String key)"}
{"logLevel":"debug","message":"\tClick with javascript to xpath {} : public void javascriptClickerWithXpath(String xpath)"}
{"logLevel":"debug","message":"\tClick with javascript to css {} : public void javascriptClickerWithCss(String css)"}
{"logLevel":"debug","message":"\tElementine tıkla {} : public void clickElement(String key)"}
Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 17487
Only local connections are allowed.
Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.
ChromeDriver was started successfully.
[1641751594.980][WARNING]: Deprecated chrome option is ignored: useAutomationExtension
[1641751594.980][WARNING]: Deprecated chrome option is ignored: useAutomationExtension
Oca 09, 2022 9:06:35 ÖS org.openqa.selenium.remote.ProtocolHandshake createSession
INFO: Detected dialect: W3C
{"logLevel":"debug","message":"Executing 'Navigate to home page' using 'class org.example.StepImplementation.navigateToHomePage"}
{"logLevel":"debug","message":"Executing 'Wait {} milliseconds' using 'class org.example.StepImplementation.waitByMilliSeconds"}
{"logLevel":"debug","message":"Executing 'Click to element {}' using 'class org.example.StepImplementation.clickElement"}
{"logLevel":"debug","message":"Executing 'Hover by given element {}' using 'class org.example.StepImplementation.hoverByGivenElement"}
{"logLevel":"debug","message":"Executing 'Click to element {}' using 'class org.example.StepImplementation.clickElement"}
{"logLevel":"debug","message":"Executing 'Send {} Keys to given element {}' using 'class org.example.StepImplementation.sendKeysToGivenElement"}
{"logLevel":"debug","message":"Executing 'Send {} Keys to given element {}' using 'class org.example.StepImplementation.sendKeysToGivenElement"}
{"logLevel":"debug","message":"Executing 'Click to element {}' using 'class org.example.StepImplementation.clickElement"}
{"logLevel":"debug","message":"Executing 'Navigate to given {} page' using 'class org.example.StepImplementation.navigateToGivenPage"}
{"logLevel":"debug","message":"Executing 'Wait {} milliseconds' using 'class org.example.StepImplementation.waitByMilliSeconds"}
{"logLevel":"debug","message":"Executing 'Click to element {}' using 'class org.example.StepImplementation.clickElement"}
{"logLevel":"debug","message":"Executing 'Send {} Keys to given element {}' using 'class org.example.StepImplementation.sendKeysToGivenElement"}
{"logLevel":"debug","message":"Executing 'Wait {} milliseconds' using 'class org.example.StepImplementation.waitByMilliSeconds"}
{"logLevel":"debug","message":"Executing 'Given element {} dynamic text area range should be max {}' using 'class org.example.StepImplementation.textRangeAndWarningMessageShouldBe"}
{"logLevel":"debug","message":"Executing 'Given element {} dynamic text area warning message should be' using 'class org.example.StepImplementation.warningMessageShouldBe"}
{"logLevel":"debug","message":"Executing 'upload file' using 'class org.example.StepImplementation.uploadImage"}
test
{"logLevel":"debug","message":"Executing 'Wait {} milliseconds' using 'class org.example.StepImplementation.waitByMilliSeconds"}
{"logLevel":"debug","message":"Executing 'Click to element {}' using 'class org.example.StepImplementation.clickElement"}
{"logLevel":"debug","message":"Executing 'Wait {} milliseconds' using 'class org.example.StepImplementation.waitByMilliSeconds"}
{"logLevel":"debug","message":"Executing 'Click to element {}' using 'class org.example.StepImplementation.clickElement"}
{"logLevel":"debug","message":"Executing 'Wait {} milliseconds' using 'class org.example.StepImplementation.waitByMilliSeconds"}
{"logLevel":"debug","message":"Killing Java runner..."}
{"logLevel":"debug","message":"Stopping execution pool..."}
{"logLevel":"debug","message":"Shutting down grpc server..."}
{"logLevel":"debug","message":"Runner killed gracefully."}
